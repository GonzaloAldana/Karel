class program {
void t(n)
{
    iterate(n)turnleft();
}

void pasos(n)
{
    if(frontIsClear)
    {
        move();
        pasos(succ(n));
    }
    else
    {
        t(2);
        while(frontIsClear)move();
        while(notFacingNorth)turnleft();
        move();
        if(iszero(n))turnoff();
        if(iszero(pred(n)))
        {
            turnoff();
        }
        if(iszero(pred(pred(n))))
        {
            mueve2(16);
        }
        if(iszero(pred(pred(pred(n)))))
        {
            mueve3(16);
        }
        if(iszero(pred(pred(pred(pred(n))))))
        {
            mueve4(016);
        }
        if(iszero(pred(pred(pred(pred(pred(n)))))))
        {
            mueve5(016);
        }
        if(iszero(pred(pred(pred(pred(pred(pred(n))))))))
        {
            mueve6(016);
        }
        if(iszero(pred(pred(pred(pred(pred(pred(pred(n)))))))))
        {
            mueve7(016);
        }
        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(n))))))))))
        {
            mueve8(016);
        }
        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))
        {
            mueve9(016);
        }
        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n))))))))))))
        {
            mueve10(016);
        }
        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))
        {
            mueve11(016);
        }
        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n))))))))))))))
        {
            mueve12(016);
        }
        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))
        {
            mueve13(016);
        }
        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n))))))))))))))))
        {
            mueve14(016);
        }
        if(iszero(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))))
        {
            mueve15(016);
        }
    }
}


void mueve15(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina14(16);
    }
    else
    {
        if(facingSouth)
        {
            camina14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina14(pred(0));
            }
            else
            {
                camina14(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve15(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve15(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve15(pred(n));
            }
            else
            {
                mueve15(succ(n));
            }
        }
     }
}


void mueve14(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina13(16);
    }
    else
    {
        if(facingSouth)
        {
            camina13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina13(pred(0));
            }
            else
            {
                camina13(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve14(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve14(pred(n));
            }
            else
            {
                mueve14(succ(n));
            }
        }
     }
}


void mueve13(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina12(16);
    }
    else
    {
        if(facingSouth)
        {
            camina12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina12(pred(0));
            }
            else
            {
                camina12(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve13(pred(n));
            }
            else
            {
                mueve13(succ(n));
            }
        }
     }
}

void mueve12(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina11(16);
    }
    else
    {
        if(facingSouth)
        {
            camina11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina11(pred(0));
            }
            else
            {
                camina11(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve12(pred(n));
            }
            else
            {
                mueve12(succ(n));
            }
        }
     }
}

void mueve11(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina10(16);
    }
    else
    {
        if(facingSouth)
        {
            camina10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina10(pred(0));
            }
            else
            {
                camina10(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve11(pred(n));
            }
            else
            {
                mueve11(succ(n));
            }
        }
     }
}

void mueve10(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina9(16);
    }
    else
    {
        if(facingSouth)
        {
            camina9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina9(pred(0));
            }
            else
            {
                camina9(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve10(pred(n));
            }
            else
            {
                mueve10(succ(n));
            }
        }
     }
}


void mueve9(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina8(16);
    }
    else
    {
        if(facingSouth)
        {
            camina8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina8(pred(0));
            }
            else
            {
                camina8(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve9(pred(n));
            }
            else
            {
                mueve9(succ(n));
            }
        }
     }
}

void mueve8(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina7(16);
    }
    else
    {
        if(facingSouth)
        {
            camina7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina7(pred(0));
            }
            else
            {
                camina7(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve8(pred(n));
            }
            else
            {
                mueve8(succ(n));
            }
        }
     }
}

void mueve7(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina6(16);
    }
    else
    {
        if(facingSouth)
        {
            camina6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina6(pred(0));
            }
            else
            {
                camina6(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve7(pred(n));
            }
            else
            {
                mueve7(succ(n));
            }
        }
     }
}

void mueve6(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina5(16);
    }
    else
    {
        if(facingSouth)
        {
            camina5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina5(pred(0));
            }
            else
            {
                camina5(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve6(pred(n));
            }
            else
            {
                mueve6(succ(n));
            }
        }
     }
}

void mueve5(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina4(16);
    }
    else
    {
        if(facingSouth)
        {
            camina4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina4(pred(0));
            }
            else
            {
                camina4(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve5(pred(n));
            }
            else
            {
                mueve5(succ(n));
            }
        }
     }
}

void mueve4(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina3(16);
    }
    else
    {
        if(facingSouth)
        {
            camina3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina3(pred(0));
            }
            else
            {
                camina3(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve4(pred(n));
            }
            else
            {
                mueve4(succ(n));
            }
        }
     }
}

void mueve3(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina2(16);
    }
    else
    {
        if(facingSouth)
        {
            camina2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina2(pred(0));
            }
            else
            {
                camina2(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve3(pred(n));
            }
            else
            {
                mueve3(succ(n));
            }
        }
     }
}

void mueve2(n)
{
    if(iszero(n))
    {
            while(notFacingSouth)turnleft();
            turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        camina1(16);
    }
    else
    {
        if(facingSouth)
        {
            camina1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(0)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                camina1(pred(0));
            }
            else
            {
                camina1(succ(0));
            }
        }
     }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    t(2);
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
    if(facingNorth)
    {
        mueve2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
    }
    else
    {
        if(facingSouth)
        {
            mueve2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
        }
        else
        {
            if(facingWest)
            {
                mueve2(pred(n));
            }
            else
            {
                mueve2(succ(n));
            }
        }
     }
}





void camina15(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina14(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina14(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina14(pred(n));
                }
                else
                {
                    camina14(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina14(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina13(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina13(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina13(pred(n));
                }
                else
                {
                    camina13(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina13(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina12(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina12(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina12(pred(n));
                }
                else
                {
                    camina12(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina12(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina11(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina11(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina11(pred(n));
                }
                else
                {
                    camina11(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina11(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina10(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina10(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina10(pred(n));
                }
                else
                {
                    camina10(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina10(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina9(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina9(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina9(pred(n));
                }
                else
                {
                    camina9(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina9(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina8(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina8(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina8(pred(n));
                }
                else
                {
                    camina8(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina8(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina7(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina7(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina7(pred(n));
                }
                else
                {
                    camina7(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina7(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina6(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina6(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina6(pred(n));
                }
                else
                {
                    camina6(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina6(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina5(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina5(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina5(pred(n));
                }
                else
                {
                    camina5(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina5(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina4(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina4(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina4(pred(n));
                }
                else
                {
                    camina4(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina4(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina3(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina3(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina3(pred(n));
                }
                else
                {
                    camina3(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina3(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina2(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina2(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina2(pred(n));
                }
                else
                {
                    camina2(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina2(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            camina1(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                camina1(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    camina1(pred(n));
                }
                else
                {
                    camina1(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}
void camina1(n)
{
    if(iszero(n))
    {
        while(notFacingNorth)turnleft();
        turnoff();
    }
    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }

        if(facingNorth)
        {
            regresa(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(succ(n)))))))))))))))));
        }
        else
        {
            if(facingSouth)
            {
                regresa(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(pred(n)))))))))))))))));
            }
            else
            {
                if(facingWest)
                {
                    regresa(pred(n));
                }
                else
                {
                    regresa(succ(n));
                }
            }
        }


    if(frontIsClear)
    {
        move();
    }
    else
    {
        if(leftIsClear)
        {
            turnleft();
            move();
        }
        else
        {
            t(3);
            move();
        }
    }
}

void regresa(n)
{
    t(2);
}


program() {
    t(3);
    pasos(1);
    while(notFacingSouth)turnleft();
    turnoff();
}

}
